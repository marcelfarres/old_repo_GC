// Generated by CoffeeScript 1.7.1
window.onload = function() {
  var A, B, C, c, canvas, circles, ctx, fps, mainloop, mouse, newButton, points, reset, show_circles, t, triangles;
  fps = 30;
  canvas = document.getElementById('delaunay');
  ctx = canvas.getContext('2d');
  mouse = new Point(0, 0);
  ctx.translate(0.5, 0.5);
  window.setInterval(mainloop, 1000 / fps);
  newButton = function(name, text, action) {
    var b;
    b = document.createElement("input");
    b.type = "submit";
    b.className = "btn active";
    b.value = text;
    b.id = name;
    b.onclick = action;
    return document.getElementById('buttons').appendChild(b);
  };
  reset = function() {
    var circles, show_circles, triangles;
    points = [];
    triangles = [];
    circles = [];
    show_circles = false;
    console.log('Reset Done!');
    return ctx.clearRect(0, 0, canvas.width, canvas.height);
  };
  points = [];
  triangles = [];
  circles = [];
  show_circles = false;
  mainloop = function() {
    var c, i, p, t, _i, _j, _len, _ref, _results;
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    for (_i = 0, _len = points.length; _i < _len; _i++) {
      p = points[_i];
      p.draw(ctx);
    }
    _results = [];
    for (i = _j = 0, _ref = points.length - 2; _j <= _ref; i = _j += 3) {
      if (points.length > i + 2) {
        t = new Triangle(points[i], points[i + 1], points[i + 2]);
      } else {
        t = new Triangle(points[i], points[i + 1], mouse);
      }
      t.draw(ctx);
      c = t.getCircle();
      if (show_circles === true) {
        _results.push(c.draw(ctx));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };
  window.setInterval(mainloop, 1000 / fps);
  canvas.onclick = function(e) {
    return points.push(mouse);
  };
  canvas.onmousemove = function(e) {
    return mouse = new Point(e.offsetX, e.offsetY);
  };
  window.onkeypress = function(e) {
    var key;
    key = String.fromCharCode(e.which);
    if (key === 'q') {
      show_circles = !show_circles;
    }
    if (key === 'r') {
      return reset();
    }
  };
  newButton('toggle-circles', 'Toggle Circles', function() {
    return show_circles = !show_circles;
  });
  A = new Point(0, 5);
  B = new Point(0, -5);
  C = new Point(5, 0);
  t = new Triangle(A, B, C);
  c = t.getCircle();
  return console.log(c);
};
